#include "Header.h"
#include "cui.h"

SHORT xx;
SHORT yy;

const char board[15][64] = {
    "   \xC9\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xBB  \n",
    "   \xBA \xDA\xC4\xC4\xC4\xBF O \xFE \xFE \xFE \xFE \xFE \xFE \xFE \xFE \xFE \xFE   \xFE \xFE \xFE \xFE \xFE \xFE \xFE \xFE \xBA  \n",
    "   \xBA \xB3 \xFE \xB3       A G13121110 9 8   7 6 5 4 3 2 1 0 \xBA  \n",
    "   \xBA \xC0\xC4\xC4\xC4\xD9       R       ~ ~ ~       ~ ~   ~       \xBA  \n",
    "\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB     TX \xFE\xFE                                 \xC8\xCD\xBB\n",
    "\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB  \xB0\xB0 RX \xFE\xFE   A R D U I N O             \xFE\xFEon O\xBA\n",
    "\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB                                             \xBA\n",
    "   \xBA     \xDB\xDB\xDB\xDB\xDB    \xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC   \xBA\n",
    "   \xBA              \xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB   \xBA\n",
    "   \xBA  \xDC\xDC  \xDF\xDF      \xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB\xDB   \xBA\n",
    "   \xBA \xDB\xDB\xFE          \xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF\xDF   \xBA\n",
    "   \xBA  \xDF\xDF              I R                            \xBA\n",
    "  \xB0\xB0\xB0\xB0\xB0\xB0              O S 3 5 G G V   A0A1A2A3A4A5  O\xBA\n",
    "  \xB0\xB0\xB0\xB0\xB0\xB0 O          \xFE \xFE \xFE \xFE \xFE \xFE \xFE \xFE    \xFE \xFE \xFE \xFE \xFE \xFE \xC9\xCD\xBC\n",
    "   \xC8\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xBC  \n"
};

void InitCUIBoard(SHORT x, SHORT y)
{
    HANDLE std = GetStdHandle(STD_OUTPUT_HANDLE);    
    xx = x;
    yy = y;
    for (SHORT i = 0; i < 15; i++)
    {
        SetConsoleCursorPosition(std, { x, (SHORT)(y + i) });
        printf("%s", board[i]);
    }

    //power ON
    SetConsoleCursorPosition(std, { (SHORT)(xx + 47), (SHORT)(yy + 5)});
    SetConsoleTextAttribute(std, 0x0A);
    printf("\xFE\xFE");
    SetConsoleTextAttribute(std, 0x07);
}

void CUIIOHook(int pin, int value, bool digital)
{
    static COORD pin_pos_digital[15] = { {49, 1}, {47, 1}, {45, 1}, {43, 1}, {41, 1}, {39, 1}, {37, 1}, {35, 1}, {31, 1}, {29, 1}, {27, 1}, {25, 1}, {23, 1}, {21, 1}, {19, 1} };
    static COORD pin_pos_analog[6] = { {49, 13}, {47, 13}, {45, 13}, {43, 13}, {41, 13}, {39, 13} };
    HANDLE std = GetStdHandle(STD_OUTPUT_HANDLE);

    if (digital)
        SetConsoleCursorPosition(std, { (SHORT)(xx + pin_pos_digital[pin].X), (SHORT)(yy + pin_pos_digital[pin].Y) });
    else
        SetConsoleCursorPosition(std, { (SHORT)(xx + pin_pos_analog[pin].X), (SHORT)(yy + pin_pos_analog[pin].Y) });

    if (value)
        SetConsoleTextAttribute(std, 0x0C);
    else
        SetConsoleTextAttribute(std, 0x07);

    printf("\xFE");

    SetConsoleTextAttribute(std, 0x07);
}

